C51 COMPILER V9.60.7.0   IRC                                                               09/09/2023 18:32:26 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE IRC
OBJECT MODULE PLACED IN .\Objects\IRC.obj
COMPILER INVOKED BY: D:\install\Keil\C51\BIN\C51.EXE IRC.c OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -IRC.lst) TABS(2) OBJECT(.\Objects\IRC.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "IRC.h"
   3          #include <intrins.h>
   4          typedef unsigned char u8;
   5          typedef unsigned int u16;
   6          
   7          unsigned char Addr;
   8          unsigned char Command;
   9          
  10          unsigned char Data[4];
  11          unsigned char pData=0;//数据指针
  12          
  13          bit Data_Ready_Flag=0;
  14          bit Repeat_Flag=0;
  15          sbit INT0_input=P3^2;
  16          
  17          void IRC_Init()
  18          {
  19   1        //设置外部中断
  20   1        IT0=1;//设置为下降沿触发
  21   1        EX0=1;//开启外部中断1
  22   1        EA=1;//开启总中断
  23   1        PX0=1;//优先级设置为最高
  24   1        INT0_input=1;
  25   1      }
  26          
  27          unsigned char IRC_Get_Addr()
  28          {
  29   1        return Addr;
  30   1      }
  31          
  32          unsigned char IRC_Get_Command()
  33          {
  34   1        return Command;
  35   1      }
  36          
  37          
  38          bit Get_Data_Ready_Flag()
  39          {
  40   1        if(Data_Ready_Flag){
  41   2          Data_Ready_Flag=0;
  42   2          return 1;
  43   2        } 
  44   1        else 
  45   1          return 0;
  46   1      }
  47          
  48          bit Get_Repeat_Flag()
  49          {
  50   1        if(Repeat_Flag){
  51   2          Repeat_Flag=0;
  52   2          return 1;
  53   2        }
  54   1        else 
C51 COMPILER V9.60.7.0   IRC                                                               09/09/2023 18:32:26 PAGE 2   

  55   1          return 0;
  56   1      }
  57          
  58          void delay(u16 k) //@10us
  59          {
  60   1        while(k--);
  61   1      }
  62          
  63          //void delay(u16 ratio)   //@11.0592MHz
  64          //{
  65          //  unsigned char data i;
  66          //  while(ratio--)
  67          //  {
  68          //    i = 2;
  69          //    while (--i);
  70          //  }
  71          //}
  72          
  73          void IRC_INT0_Routine() interrupt 0
  74          { 
  75   1          u16 end;
  76   1          u16 counter;
  77   1          u8 i;
  78   1          u8 j;
  79   1        
  80   1          //关闭外部中断1，防止二次调用函数
  81   1          EX0=0;
  82   1          //@9ms的低电平才确定为信号的开始信号
  83   1          end=100;        //1000*10us=10ms,超过说明接收到错误的信号
  84   1          while((INT0_input==0)&&(end>0)) //等待前面9ms的低电平过去     
  85   1          {     
  86   2            delay(10);
  87   2            end--;
  88   2          }
  89   1          
  90   1          end=500;
  91   1          while((INT0_input==1)&&(end>0)) //等待4.5ms的高电平过去     
  92   1          {     
  93   2            delay(1);
  94   2            end--;
  95   2          } 
  96   1            
  97   1                for(i=0;i<4;i++)
  98   1                {
  99   2                    for(j=0;j<8;j++)
 100   2                      {         
 101   3                        //前560us低电平
 102   3                        end=60;
 103   3                        while(INT0_input==0&&end>0)
 104   3                        {
 105   4                          delay(1);
 106   4                          end--;
 107   4                        }
 108   3                        end=300;
 109   3                        counter=0;
 110   3                        while((INT0_input==1)&&(end>0))  //计算高电平的时间长度。
 111   3                        {
 112   4                          delay(10);   //0.1ms
 113   4                          counter++;
 114   4                          end--;
 115   4                          if(counter>30)//长时间不再变回低电平，表示为Repeat信号
 116   4                          {
C51 COMPILER V9.60.7.0   IRC                                                               09/09/2023 18:32:26 PAGE 3   

 117   5                            counter=0;
 118   5                            EX0=1;
 119   5                            Repeat_Flag=1;
 120   5                            return;
 121   5                          }
 122   4                        }
 123   3                        Data[i]>>=1;   //i表示第几组数据
 124   3                        if(counter>=8)      //如果高电平出现大于565us，那么是1
 125   3                        {
 126   4                          Data[i]|=0x80;
 127   4                        }
 128   3                        counter=0;
 129   3                                
 130   3                      }
 131   2                }
 132   1                if(Data[0]==~Data[1]&&Data[2]==~Data[3])
 133   1                {
 134   2                  Addr=Data[0];
 135   2                  Command=Data[2];
 136   2                  Data_Ready_Flag=1;
 137   2                }
 138   1                EX0=1;
 139   1                counter=0;
 140   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    309    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
